{"version":3,"sources":["app/feats/featPrereqOutput.js"],"names":[],"mappings":"AAAA,OAAO,SAAS,CAAC,WAAW,UAAU,SAAS;EAC7C,OAAO;IACL,SAAS,CAAC,UAAU,SAAS;IAC7B,SAAS,YAAY;MACnB;;MAEA,QAAQ,WAJC,UAAU,SAAS;QAChC,IAAI,SAAS;QACb,IAAI,gBAAgB;QACpB,IAAI,oBAAoB;;QAGxB,SAAS,kBAAmB,KAAK,KAAK,WAAW,aAAa,cAAc;UAC1E,IAAI,SAAS;UACb,IAAK,QAAQ,UAAU,QAAQ,SAAS;YACtC,IAAK,cAAc,SAAS,gBAAgB,eAAe,GAAI,UAAU;YACzE,UAAU;YACV,IAAK,QAAQ,QAAS,UAAU;YAChC,OAAO;;UAET,IAAM,cAAc,IAAI,IAAK,UAAC,MAAM,GAAM;YACxC,IAAI,SAAS;YACb,IAAK,cAAc,SAAS,gBAAgB,eAAe,GAAI,UAAU;YACzE,IAAK,QAAQ,aAAc;cACzB,IAAM,UAAU,OAAO,KAAK,MAAM;;cAElC,IAAK,MAAM,IAAI,SAAS,GAAI;gBAC1B,UAAM,OAAS,IAAI,SAAS,IAAI,SAAS,MAAE,KAAK,UAAO,MAAM,KAAK;qBAC7D;gBACL,UAAM,KAAQ,UAAO,MAAM,KAAK;;mBAG7B,IAAK,QAAQ,QAAS;cAC3B,UAAM,KAAQ,OAAI;mBACb,IAAK,QAAQ,UAAW;cAC7B,UAAU;;YAEZ,OAAO;;UAET,OAAO,YAAY,KAAK;;;QAG1B,SAAS,kBAAmB,QAAQ,KAAK,OAAO;;UAE9C,IAAI,cAAc;;UAElB,IAAK,QAAQ,OAAQ;YACnB,OAAO,KAAM,QAAQ,QAAQ,MAAO,QAAS,UAAC,QAAQ,aAAgB;cACpE,eAAe,kBAAmB,QAAQ,QAAQ,KAAK,SAAS,QAAQ,KAAK,OAAO,QAAQ,QAAQ,KAAK,QAAQ;;iBAE9G;YACL,eAAe,kBAAmB,QAAQ,QAAQ,MAAM,KAAK,OAAO,QAAQ,QAAQ,KAAK;;;UAG3F,OAAO;;;QAGT,OAAO,KAAK,SAAS,QAAS,UAAA,KAAO;UACnC,cAAc,KAAK,QAAQ;;QAE7B,gBAAgB,EAAE,SAAS,eAAe,EAAE;;QAE5C,IAAK,OAAO,KAAK,SAAS,SAAS,cAAc,QAAS;UACxD,oBAAoB;;;QAGtB,OAAO,KAAK,SAAS,QAAS,UAAC,QAAQ,GAAM;;UAE3C,SAAS,cAAe,KAAK,GAAG,iBAAiB;;YAE/C,IAAI,SAAS;YACb,IAAK,MAAM,GAAI;cACb,UAAM,kBAAqB,OAAO,MAAM,QAAQ,KAAE;;;YAGpD,IAAK,gBAAgB,SAAS,KAAK,MAAM,GAAI;cAC3C,UAAM;;;YAIR,IAAK,gBAAgB,SAAS,KAAK,MAAM,GAAI;cAC3C,UAAM;;;YAGR,UAAU,kBAAkB,QAAQ,KAAK;;YAEzC,IAAK,gBAAgB,SAAS,KAAK,IAAI,GAAI;cACzC,UAAM;;;YAGR,IAAK,gBAAgB,SAAS,KAAK,MAAM,gBAAgB,SAAQ,GAAK;cACpE,UAAM;;;YAGR,OAAO;;;UAGT,IAAM,aAAa,OAAO,KAAK,QAAQ;UACvC,IAAM,kBAAkB;;UAExB,IAAI,qBAAqB,IAAI,GAAG;YAC9B;;;UAGF,UAAU;;UAEV,WAAW,QAAS,UAAC,KAAK,GAAM;YAC9B,UAAM,SAAY,cAAc,KAAK,GAAG,mBAAgB;;;UAG1D,UAAU;;;QAGZ,OAAO;;;;GAKN","file":"featPrereqOutput.js","sourcesContent":["import 'lodash';\n\nexport default function (prereqs) {\n  let output = '';\n  let uniquePrereqs = []\n  let suppressIteration = false;\n\n\n  function processAttrPrereq (val, key, parentKey, parentIndex, parentLength) {\n    let string = '';\n    if ( key === 'Feat' || key === 'Other') {\n      if ( parentKey === 'any' && parentIndex === parentLength - 1 ) string += ', or  ';\n      string += val;\n      if ( key === 'Feat' ) string += ' feat ';\n      return string;\n    }\n    const attrStrings = val.map( (attr, x) => {\n      let string = '';\n      if ( parentKey === 'any' && parentIndex === parentLength - 1 ) string += 'or ';\n      if ( key === 'Attribute' ) {\n        const attrKey = Object.keys(attr)[0];\n\n        if ( x === val.length - 1 ) {\n          string += ` ${ val.length > 1 ? ' or ' : '' }${ attrKey } ${ attr[attrKey] }`\n        } else {\n          string += `${ attrKey } ${ attr[attrKey] }`;\n        }\n\n      } else if ( key === 'Feat' ) {\n        string += `${ attr } feat `;\n      } else if ( key === 'Other ' ) {\n        string += attr;\n      }\n      return string;\n    });\n    return attrStrings.join(', ');\n  }\n\n  function processPrereqTier (prereq, key, index) {\n\n    let prereqTiers = '';\n\n    if ( key === 'any' ) {\n      Object.keys( prereqs[prereq][key] ).forEach( (subKey, subKeyIndex) => {\n        prereqTiers += processAttrPrereq( prereqs[prereq][key][subKey], subKey, key, index, prereqs[prereq][key][subKey].length );\n      });\n    } else {\n      prereqTiers += processAttrPrereq( prereqs[prereq][key], key, index, prereqs[prereq][key].length );\n    }\n\n    return prereqTiers;\n  }\n\n  Object.keys(prereqs).forEach( key => {\n    uniquePrereqs.push(prereqs[key]);\n  });\n  uniquePrereqs = _.uniqWith(uniquePrereqs, _.isEqual);\n\n  if ( Object.keys(prereqs).length > uniquePrereqs.length ) {\n    suppressIteration = true;\n  }\n\n  Object.keys(prereqs).forEach( (prereq, x) => {\n\n    function processPrereq (key, i, localPrereqKeys) {\n\n      var output = '';\n      if ( i === 0 ) {\n        output += `<strong>Tier ${ prereq.split('tier')[1] }</strong>: `;\n      }\n\n      if ( localPrereqKeys.length > 1 && i === 0 ) {\n        output += `<ul>`;\n      }\n\n\n      if ( localPrereqKeys.length > 1 && i === 0 ) {\n        output += `<li>`;\n      }\n\n      output += processPrereqTier(prereq, key, i);\n\n      if ( localPrereqKeys.length > 1 && i > 0 ) {\n        output += `</li>`;\n      }\n\n      if ( localPrereqKeys.length > 1 && i === localPrereqKeys.length -1  ) {\n        output += `</ul>`;\n      }\n\n      return output;\n    }\n\n    const prereqKeys = Object.keys(prereqs[prereq]);\n    const localPrereqKeys = prereqKeys;\n\n    if (suppressIteration && x > 0) {\n      return;\n    }\n\n    output += '<ul>'\n\n    prereqKeys.forEach( (key, z) => {\n      output += `<li>${ processPrereq(key, z, localPrereqKeys) }</li>`;\n    });\n\n    output += '</ul>';\n  });\n\n  return output;\n}\n"]}