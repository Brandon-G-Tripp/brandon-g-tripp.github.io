{"version":3,"sources":["app/feats/featPrereqOutput.js"],"names":[],"mappings":"AAAA,OAAO,SAAS,CAAC,WAAW,UAAU,SAAS;EAC7C,OAAO;IACL,SAAS,CAAC,UAAU,SAAS;IAC7B,SAAS,YAAY;MACnB;;MAEA,QAAQ,WAJC,UAAU,SAAS;QAChC,IAAI,SAAS;QACb,IAAI,gBAAgB;QACpB,IAAI,oBAAoB;;QAGxB,SAAS,kBAAmB,KAAK,OAAO;UACtC,IAAM,cAAc,IAAI,IAAK,UAAC,MAAM,GAAM;YACxC,IAAM,UAAU,OAAO,KAAK,MAAM;YAClC,IAAK,OAAQ;cACX,OAAA,SAAe,UAAO,MAAM,KAAK,WAAQ;mBACpC;cACL,OAAS,MAAM,IAAI,SAAS,IAAC,MAAS,IAAI,SAAS,IAAI,SAAS,MAAE,KAAI,UAAO,MAAM,KAAK,WAAQ,KAAU;;;UAI9G,OAAO,QAAU,YAAY,KAAK,MAAM;;;QAG1C,SAAS,kBAAmB,iBAAiB,QAAQ,KAAK,OAAO;;UAE/D,IAAI,cAAc;;UAElB,IAAK,QAAQ,OAAQ;YACnB,OAAO,KAAM,QAAQ,QAAQ,MAAO,QAAS,UAAC,QAAQ,aAAgB;cACpE,IAAK,WAAW,aAAc;gBAC5B,eAAe,kBAAmB,QAAQ,QAAQ,KAAK,WAAW;qBAC7D,IAAK,WAAW,QAAS;gBAC9B,eAAW,KAAQ,QAAQ,QAAQ,KAAK,UAAO;;;iBAG9C,IAAK,QAAQ,aAAc;YAChC,eAAe,kBAAkB,QAAQ,QAAQ;iBAC5C,IAAK,QAAQ,QAAS;YAC3B,eAAW,KAAQ,QAAQ,QAAQ,OAAI;iBAClC,IAAK,QAAQ,SAAU;YAC5B,eAAe,QAAQ,QAAQ,KAAK;;;UAGtC,OAAO;;;QAGT,OAAO,KAAK,SAAS,QAAS,UAAA,KAAO;UACnC,cAAc,KAAK,QAAQ;;QAE7B,gBAAgB,EAAE,SAAS,eAAe,EAAE;;QAE5C,IAAK,OAAO,KAAK,SAAS,SAAS,cAAc,QAAS;UACxD,oBAAoB;;;QAGtB,OAAO,KAAK,SAAS,QAAS,UAAC,QAAQ,GAAM;;UAE3C,SAAS,cAAe,KAAK,GAAG,mBAAmB;YACjD,IAAI,SAAS;YACb,IAAK,MAAM,GAAI;cACb,UAAM,kBAAqB,OAAO,MAAM,QAAQ,KAAE;;;YAGpD,IAAK,gBAAgB,SAAS,KAAK,MAAM,GAAI;cAC3C,UAAM;;;YAIR,IAAK,gBAAgB,SAAS,GAAI;cAChC,UAAM;;;YAGR,UAAU,kBAAkB,iBAAiB,QAAQ,KAAK;;YAE1D,IAAI,mBAAmB;cACrB,UAAM;;;YAGR,IAAK,gBAAgB,SAAS,KAAK,IAAI,GAAI;cACzC,UAAM;;;YAGR,IAAK,gBAAgB,SAAS,KAAK,MAAM,gBAAgB,SAAQ,GAAK;cACpE,UAAM;;;YAGR,OAAO;;;UAGT,IAAM,aAAa,OAAO,KAAK,QAAQ;UACvC,IAAM,kBAAkB;;UAExB,IAAI,qBAAqB,IAAI,GAAG;YAC9B,UAAM;YACN;;;UAGF,WAAW,QAAS,UAAC,KAAK,GAAM;YAC9B,UAAU,cAAc,KAAK;;;UAG/B,UAAU;;;QAGZ,OAAO;;;;GAKN","file":"featPrereqOutput.js","sourcesContent":["import 'lodash';\n\nexport default function (prereqs) {\n  let output = '';\n  let uniquePrereqs = []\n  let suppressIteration = false;\n\n\n  function processAttrPrereq (arr, multi) {\n    const attrStrings = arr.map( (attr, x) => {\n      const attrKey = Object.keys(attr)[0];\n      if ( multi ) {\n        return `<li>${ attrKey } ${ attr[attrKey] }</li>`;\n      } else {\n        return ( x === arr.length - 1 ) ? `${ arr.length > 1 ? ' or ' : ''}${ attrKey } ${ attr[attrKey] }` : `${ attrKey }`;\n      }\n\n    });\n    return (multi) ? attrStrings.join('') : attrStrings;\n  }\n\n  function processPrereqTier (localPrereqKeys, prereq, key, index) {\n\n    let prereqTiers = '';\n\n    if ( key === 'any' ) {\n      Object.keys( prereqs[prereq][key] ).forEach( (subKey, subKeyIndex) => {\n        if ( subKey === 'Attribute' ) {\n          prereqTiers += processAttrPrereq( prereqs[prereq][key][subKey]) + ' ';\n        } else if ( subKey === 'Feat' ) {\n          prereqTiers += `${ prereqs[prereq][key][subKey] } feat `;\n        }\n      });\n    } else if ( key === 'Attribute' ) {\n      prereqTiers += processAttrPrereq(prereqs[prereq][key]);\n    } else if ( key === 'Feat' ) {\n      prereqTiers += `${ prereqs[prereq][key] } feat`;\n    } else if ( key === 'Other' ) {\n      prereqTiers += prereqs[prereq][key][index];\n    }\n\n    return prereqTiers;\n  }\n\n  Object.keys(prereqs).forEach( key => {\n    uniquePrereqs.push(prereqs[key]);\n  });\n  uniquePrereqs = _.uniqWith(uniquePrereqs, _.isEqual);\n\n  if ( Object.keys(prereqs).length > uniquePrereqs.length ) {\n    suppressIteration = true;\n  }\n\n  Object.keys(prereqs).forEach( (prereq, x) => {\n\n    function processPrereq (key, i, suppressIteration) {\n      var output = '';\n      if ( i === 0 ) {\n        output += `<strong>Tier ${ prereq.split('tier')[1] }</strong>: `;\n      }\n\n      if ( localPrereqKeys.length > 1 && i === 0 ) {\n        output += `<ul>`;\n      }\n\n\n      if ( localPrereqKeys.length > 1 ) {\n        output += `<li>`;\n      }\n\n      output += processPrereqTier(localPrereqKeys, prereq, key, i);\n\n      if (suppressIteration) {\n        output += `</li></ul>`;\n      }\n\n      if ( localPrereqKeys.length > 1 && i > 0 ) {\n        output += `</li>`;\n      }\n\n      if ( localPrereqKeys.length > 1 && i === localPrereqKeys.length -1  ) {\n        output += `</ul>`;\n      }\n\n      return output;\n    }\n\n    const prereqKeys = Object.keys(prereqs[prereq]);\n    const localPrereqKeys = prereqKeys;\n\n    if (suppressIteration && x > 0) {\n      output += `</ul></li>`;\n      return;\n    }\n\n    prereqKeys.forEach( (key, z) => {\n      output += processPrereq(key, z);\n    });\n\n    output += '</li>';\n  });\n\n  return output;\n}\n"]}