{"version":3,"sources":["app/banes/banesList.controller.js"],"names":[],"mappings":"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","file":"app/banes/banesList.controller.js","sourcesContent":["'use strict';\n\nimport angular from 'angular';\nimport 'lodash';\nimport banes from './banes.json!'\n\nclass BanesCtrl {\n\n  // called once when the class is instantiated\n  constructor ($scope, $location, $mdMedia, Config, Link) {\n\n    this.$scope = $scope;\n    this.$location = $location;\n    this.$scope.$mdMedia = $mdMedia;\n    this.Config = Config;\n    this.Link = Link;\n\n    this.powers = [];\n    this.powers = banes;\n    this.attackAttributes = [\n            { name: 'All' },\n            { name: 'Agility' },\n            { name: 'Creation' },\n            { name: 'Divination' },\n            { name: 'Enchantment' },\n            { name: 'Energy' },\n            { name: 'Entropy' },\n            { name: 'Might' },\n            { name: 'Illusion' },\n            { name: 'Psychic' },\n          ];\n    this.selectedPowers = [];\n    this.selectedAttributes = ['All'];\n    this.searchQuery = '';\n    this.attackAttrSearchText = '';\n    this.powerLevelValue = 0;\n    this.powerAboveBelow = 'or Greater';\n\n    if ( this.$location.$$search ) {\n      this.selectedAttributes = [];\n      Object.keys(this.$location.$$search).forEach( (val ) => {\n        if ( _.findWhere( this.attackAttributes, { name: val }) ) {\n          this.selectedAttributes.push({ name: val, power: this.$location.$$search[val] });\n        }\n      });\n    }\n\n    // watch for changes to selectedItems filter, remove them from the querystring\n    // if they are present\n    this.$scope.$watch('banesCtrl.selectedAttributes', (newVal, oldVal) => {\n      const removedItem = _.difference(oldVal,newVal);\n      if ( Array.isArray( removedItem ) && removedItem[0] && removedItem[0].name ) {\n        this.$location.search( removedItem[0].name, null );\n      }\n    }, true);\n\n  }\n\n  // public class methods\n  updateSearchTextModel (val) {\n    this.attackAttrSearchText = val;\n  }\n\n  attackAttrSearchFilter () {\n    // return all the options if the user hasn't selected a filter\n    return (item) => {\n      if ( this.attackAttrSearchText === '' ){\n        return true;\n      } else {\n        return item.name.toLowerCase().match( this.attackAttrSearchText.toLowerCase());\n      }\n    }.bind(this);\n  }\n\n  textSearchFilter () {\n    // if `searchQuery` is empty, we want to show all list items\n    return (thisPower) => {\n      var item = thisPower;\n      if ( this.searchQuery === '' && _.contains( this.selectedAttributes, 'All' ) ) {\n        return true;\n      }\n      var regex = new RegExp(this.searchQuery, 'gi');\n      var show = false; // initially we assume that we won't show a given result\n      var inAttackFilter = true;\n      // now we look for matches in the following object properties\n      show = item.name.match(regex) || item.description.match(regex) || item.effect.match(regex);\n      // if the selectedAttributes array is longer than 0, we need to show\n      // only results that match one of the selected properties\n      if ( this.selectedAttributes.length > 0 ) {\n        var inAttackFilter = false;\n        if ( _.findWhere( this.selectedAttributes, { name: 'All' } )  ) {\n          inAttackFilter = true;\n        } else {\n          var searchAttrs = angular.copy( _.without( this.selectedAttributes, 'All' ) );\n          var inAttackFilter = _.intersection( item.attackAttributes, _.pluck(searchAttrs, 'name') ).length > 0;\n        }\n      }\n      // return the result (either `true` or `false`)\n      return show && inAttackFilter;\n    }\n  }\n\n  powerLevelFilter () {\n    return (thisPower) => {\n      let item = thisPower;\n      let powerAbove = ( this.powerAboveBelow === 'or Greater' );\n      let include = false;\n      // if there are any querystring search params\n      if ( _.compact( _.pluck( this.selectedAttributes, 'power' ) ).length > 0 ) {\n        for (var i = 0; i <= item.power.length; i++) {\n          // find the intersection between attributes in this power and\n          // attributes that are also in active parameters\n\n          let intersectAttackAttrs = _.intersection( item.attackAttributes, _.pluck( this.selectedAttributes, 'name' ) );\n          if ( intersectAttackAttrs.length > 0 ) {\n            powerAbove = false;\n            intersectAttackAttrs.forEach( (attr) => {\n              if ( this.$location.$$search[attr] >= item.power[0] ) {\n                include = true;\n              }\n            });\n            return include;\n          }\n\n          if ( powerAbove && item.power[i] >= this.powerLevelValue ) {\n            include = true;\n          } else if ( !powerAbove && item.power[i] <= this.powerLevelValue ) {\n            include = true;\n          }\n        };\n      } else {\n        for (var i = 0; i <= item.power.length; i++) {\n          if ( powerAbove && item.power[i] >= this.powerLevelValue ) {\n            include = true;\n          } else if ( !powerAbove && item.power[i] <= this.powerLevelValue ) {\n            include = true;\n          }\n        };\n      }\n      return include;\n    }\n  }\n}\n\nexport default BanesCtrl;\n"],"sourceRoot":"/source/"}