{"version":3,"sources":["app/boons/boonsList.controller.js"],"names":[],"mappings":"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","file":"app/boons/boonsList.controller.js","sourcesContent":["'use strict';\n\nimport angular from 'angular';\nimport 'lodash';\nimport boons from './boons.json!'\n\nclass BoonsListCtrl {\n\n  // called once when the class is instantiated\n  constructor ($scope, $http, $filter, $sce, Config, Link) {\n    this.$scope = $scope;\n    this.Config = Config;\n    this.Link = Link;\n    this.items = boons || [];\n    this.attributes = [\n            'All',\n            'Creation',\n            'Entropy',\n            'Divination',\n            'Psychic',\n            'Alteration',\n            'Spirit',\n            'Illusion',\n            'Movement',\n            'Abjuration',\n            'Fortitude',\n            'Energy'\n          ];\n    this.selectedPowers = [];\n    this.selectedAttributes = ['All'];\n    this.searchQuery = '';\n    this.attackAttrSearchText = '';\n    this.powerLevelValue = 0;\n    this.powerAboveBelow = 'or Greater';\n  }\n\n  // public class methods\n  updateSearchTextModel (val) {\n    this.attackAttrSearchText = val;\n  }\n\n  attackAttrSearchFilter () {\n    // return all the options if the user hasn't selected a filter\n    return (item) => {\n      if ( this.attackAttrSearchText === '' ){\n        return true;\n      } else {\n        return item.toLowerCase().match( this.attackAttrSearchText.toLowerCase());\n      }\n    }.bind(this);\n  }\n\n  textSearchFilter () {\n    // if `searchQuery` is empty, we want to show all list items\n    return (thisPower) => {\n      // debugger;\n      var item = thisPower;\n      if ( this.searchQuery === '' && _.contains( this.selectedAttributes, 'All' ) ) {\n        return true;\n      }\n      var regex = new RegExp(this.searchQuery, 'gi');\n      var show = false; // initially we assume that we won't show a given result\n      var inAttackFilter = true;\n      // now we look for matches in the following object properties\n      show = item.name.match(regex) || item.description.match(regex) || item.effect.match(regex);\n      // if the selectedAttributes array is longer than 0, we need to show\n      // only results that match one of the selected properties\n      if ( this.selectedAttributes.length > 0 ) {\n        var inAttackFilter = false;\n        if ( this.selectedAttributes.indexOf('All') !== -1 ) {\n          inAttackFilter = true;\n        } else {\n          var searchAttrs = angular.copy( this.selectedAttributes );\n          var inAttackFilter = _.intersection( item.attribute, searchAttrs ).length > 0;\n          // console.log( inAttackFilter );\n        }\n      }\n      // return the result (either `true` or `false`)\n      return show && inAttackFilter;\n    }\n  }\n\n  powerLevelFilter () {\n    return (thisPower) => {\n      var item = thisPower;\n      const powerAbove = ( this.powerAboveBelow === 'or Greater' );\n      var include = false;\n      for (var i = 0; i <= item.power.length; i++) {\n        if ( powerAbove && item.power[i] > this.powerLevelValue ) {\n          include = true;\n          break;\n        } else if ( !powerAbove && item.power[i] <= this.powerLevelValue ) {\n          include = true;\n          break;\n        }\n      };\n      return include;\n    }\n  }\n}\n\nexport default BoonsListCtrl;\n"],"sourceRoot":"/source/"}