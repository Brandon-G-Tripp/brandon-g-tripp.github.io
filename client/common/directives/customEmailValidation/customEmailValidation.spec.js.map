{"version":3,"sources":["common/directives/customEmailValidation/customEmailValidation.spec.js"],"names":["angular","customEmailValidation","chai","chaiJq","use","expect","describe","element","compiled","scope","beforeEach","mock","module","name","inject","$rootScope","$compile","$new","elementTemplate","$digest","checkValid","email","it","to","have","$class","checkInvalid"],"mappings":"AAAA;;AAEA,OAAO,SAAS,CAAC,WAAW,iBAAiB,2BAA2B,QAAQ,YAAY,UAAU,SAAS,UAAU;EACvH;;EAEA,IAAI,SAAS,uBAAuB,MAAM,QAAQ;EAClD,OAAO;IACL,SAAS,CAAC,UAAU,UAAU;MAP3BA,UAQS,SAAS;OAClB,UAAU,eAAe,IAAI,UAAU,wBAAwB;MAP/DC,wBAQuB,uBAAuB;OAC9C,UAAU,OAAO;MARjBC,OASM,MAAM;OACZ,UAAU,SAAS;MATnBC,SAUQ,QAAQ;;IAEnB,SAAS,YAAY;MAVzBD,KAAKE,IAAID;MACHE,SAASH,KAAKG;MAEpBC,SAAS,oCAAoC,YAAM;QACjD,IAAIC;QACJ,IAAIC;QACJ,IAAIC;QAEJC,WAAWV,QAAQW,KAAKC,OAAOX,sBAAsBY;QAErDH,WAAWI,OAAO,UAACC,YAAYC,UAAa;UAC1CP,QAAQM,WAAWE;UAEnB,IAAMC,kBAAkB;UACxBX,UAAUP,QAAQO,QAAQW;UAE1BV,WAAWQ,SAAST,SAASE;UAC7BA,MAAMU;;;QAGR,IAAMC,aAAa,SAAbA,WAAcC,OAAU;UAC5BC,GAAE,gBAAA,OAAkBD,QAAU,YAAM;YAClCZ,MAAMY,QAAQA;YACdZ,MAAMU;YACNd,OAAOE,SAASgB,GAAGC,KAAKC,OAAO;;;;QAInC,IAAMC,eAAe,SAAfA,aAAgBL,OAAU;UAC9BC,GAAE,kBAAA,OAAoBD,QAAU,YAAM;YACpCZ,MAAMY,QAAQA;YACdZ,MAAMU;YACNd,OAAOE,SAASgB,GAAGC,KAAKC,OAAO;;;;QAInCL,WAAW;QACXA,WAAW;QACXA,WAAW;QACXA,WAAW;QAEXM,aAAa;QACbA,aAAa;QACbA,aAAa;;;;GASZ","file":"customEmailValidation.spec.js","sourcesContent":["import angular from 'angular';\nimport 'angular-mocks';\nimport customEmailValidation from './customEmailValidation';\nimport chai from 'chai';\nimport chaiJq from 'chai-jq';\n\nchai.use(chaiJq);\nconst expect = chai.expect;\n\ndescribe('directive: customEmailValidation', () => {\n  let element;\n  let compiled;\n  let scope;\n\n  beforeEach(angular.mock.module(customEmailValidation.name));\n\n  beforeEach(inject(($rootScope, $compile) => {\n    scope = $rootScope.$new();\n\n    const elementTemplate = '<input type=\"email\" custom-email-validation required name=\"testSignup\" ng-model=\"email\">';\n    element = angular.element(elementTemplate);\n\n    compiled = $compile(element)(scope);\n    scope.$digest();\n  }));\n\n  const checkValid = (email) => {\n    it(`is valid for ${ email }`, () => {\n      scope.email = email;\n      scope.$digest();\n      expect(element).to.have.$class('ng-valid');\n    });\n  };\n\n  const checkInvalid = (email) => {\n    it(`is invalid for ${ email }`, () => {\n      scope.email = email;\n      scope.$digest();\n      expect(element).to.have.$class('ng-invalid');\n    });\n  };\n\n  checkValid('foo@gmail.com');\n  checkValid('foo.bar.baz@yahoo.net');\n  checkValid('foo&^(@gmail.com');\n  checkValid('z@z.z');\n\n  checkInvalid('');\n  checkInvalid('foo');\n  checkInvalid('foo@gmail');\n\n});\n"]}