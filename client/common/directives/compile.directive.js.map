{"version":3,"sources":["common/directives/compile.directive.js"],"names":["angular","compileDirectiveModule","module","directive","$compile","restrict","link","scope","element","attrs","$watch","$eval","compile","value","html","toString","contents"],"mappings":"AAAA;;AAEA,OAAO,SAAS,CAAC,YAAY,UAAU,SAAS,UAAU;EACxD;;EAEA,IAAI,SAAS;EACb,OAAO;IACL,SAAS,CAAC,UAAU,UAAU;MAP3BA,UAQS,SAAS;;IAErB,SAAS,YAAY;MARnBC,yBAAyBD,QAAQE,OAAO,wBAAwB;MAEtED,uBAAuBE,UAAU,wBAAW,UAAUC,UAAU;QAE9D,OAAO;UACLC,UAAU;UACVC,MAAM,SAAA,KAACC,OAAOC,SAASC,OAAU;YAC/BF,MAAMG,OAAO,YAAY;cACvB,OAAOH,MAAMI,MAAMF,MAAMG;eACxB,UAACC,OAAU;;;;cAIZL,QAAQM,KAAKD,SAASA,MAAME;cAE5BX,SAASI,QAAQQ,YAAYT;;;;;;MAY/B,QAAQ,WALCN;;;GAQZ","file":"compile.directive.js","sourcesContent":["import angular from 'angular';\n\nconst compileDirectiveModule = angular.module('compile.directive.js', []);\n\ncompileDirectiveModule.directive('compile', function ($compile) {\n\n  return {\n    restrict: 'A',\n    link: (scope, element, attrs) => {\n      scope.$watch(function () {\n        return scope.$eval(attrs.compile);\n      }, (value) => {\n        // Incase value is a TrustedValueHolderType, sometimes it\n        // needs to be explicitly called into a string in order to\n        // get the HTML string.\n        element.html(value && value.toString());\n\n        $compile(element.contents())(scope);\n      });\n    }\n  };\n\n});\n\nexport default compileDirectiveModule;\n"]}