{"version":3,"sources":["common/directives/loginModal/loginModal.js"],"names":["loginModalDirectiveModule","angular","module","LoginModalCtrl","$scope","$mdDialog","self","hide","cancel","LoginModalLaunchCtrl","$rootScope","$state","AUTH_EVENTS","showModal","show","controller","controllerAs","templateUrl","locals","clickOutsideToClose","hideModal","go","current","reload","$on","sessionTimeout","event","$current","name","currentScope","loginModalLaunchCtrl","loginSuccess","directive","restrict"],"mappings":"AAAA;AAEA;;AACA,OAAO,SAAS,CAAC,oBAAoB,qBAAqB,qBAAqB,UAAU,SAAS,UAAU;EAC1G;;EAEA,IAAI,2BAA2B,gBAAgB;;EAE/C,SAAS,gBAAgB,UAAU,aAAa,EAAE,IAAI,EAAE,oBAAoB,cAAc,EAAE,MAAM,IAAI,UAAU;;EAEhH,SAAS,kBAAkB,QAAQ,OAAO,EAAE,KAAK,IAAI,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,EAAE,IAAI,aAAa,MAAM,IAAI,WAAW,aAAa,WAAW,cAAc,OAAO,WAAW,eAAe,MAAM,IAAI,WAAW,YAAY,WAAW,WAAW,MAAM,OAAO,eAAe,QAAQ,WAAW,KAAK;;EAE7S,SAAS,aAAa,aAAa,YAAY,aAAa,EAAE,IAAI,YAAY,kBAAkB,YAAY,WAAW,aAAa,IAAI,aAAa,kBAAkB,aAAa,cAAc,OAAO;;EAEzM,OAAO;IACL,SAAS,CAAC,UAAU,kBAAkB,IAAI,UAAU,kBAAkB,IAAI,UAAU,gBAAgB;IACpG,SAAS,YAAY;MARnBA,4BAA4BC,QAAQC,OAAO,iBAAiB,CAChE;;MAGIC;;MASA,YAAY;QARhB,SAAA,eAAaC,QAAQC,WAAW;UAAA,gBAAA,MAAA;;UAC9B,KAAKC,OAAOA;UACZ,KAAKF,SAAUA;UACf,KAAKC,YAAaA;;;QAcd,aAAa,gBAAgB,CAAC;UAC5B,KAAK;UACL,OAAO,SAAS,OAdhB;YACN,KAAKA,UAAUE;;WAgBR;UACD,KAAK;UACL,OAAO,SAAS,SAhBd;YACR,KAAKF,UAAUG;;;;QAoBX,OAAO;;;MAhBTC,uBACJ,SAAA,qBAAcC,YAAYC,QAAQN,WAAWO,aAAc;QAAA,gBAAA,MAAA;;QACzD,KAAKF,aAAaA;QAClB,KAAKC,SAASA;QACd,KAAKN,YAAYA;;QAEjB,KAAKQ,YAAY,YAAY;UAC3B,KAAKR,UACFS,KAAK;YACNC,YAAYZ;YACZa,cAAc;YACdC,aAAa;YACbC,QAAS;cACPZ,MAAM;;;YAERa,qBAAqB;;;;QAIzB,KAAKC,YAAY,YAAY;UAC3BT,OAAOU,GAAGV,OAAOW,SAAS,IAAI;YAACC,QAAQ;;UACvC,KAAKlB,UAAUE;;;;QAIjB,KAAKG,WAAWc,IAAIZ,YAAYa,gBAAgB,UAAUC,OAAO;;UAE/D,IAAKf,OAAOgB,SAASC,SAAS,SAAU;YACtCF,MAAMG,aAAaC,qBAAqBjB;;;;QAK5C,KAAKH,WAAWc,IAAIZ,YAAYmB,cAAc,UAAUL,OAAO;UAC7DA,MAAMG,aAAaC,qBAAqBV;;;;MAK9CpB,0BAA0BgC,UAAU,cAAc,YAAY;QAC1D,OAAO;UACLC,UAAU;UACVlB,YAAYN;UACZO,cAAc;;;;MAwBd,QAAQ,WApBChB;;;GAuBZ","file":"loginModal.js","sourcesContent":["/* global self */\n\n'use strict';\n\nimport 'angular-material';\nimport 'angular-ui-router';\nimport './loginModal.tpl';\n\nconst loginModalDirectiveModule = angular.module('loginModal.js', [\n  'common/directives/loginModal/loginModal.tpl.html'\n]);\n\nclass LoginModalCtrl {\n  constructor ($scope, $mdDialog) {\n    this.self = self;\n    this.$scope =  $scope;\n    this.$mdDialog =  $mdDialog;\n  }\n  hide () {\n    this.$mdDialog.hide();\n  }\n  cancel () {\n    this.$mdDialog.cancel();\n  }\n}\n\nclass LoginModalLaunchCtrl {\n  constructor ( $rootScope, $state, $mdDialog, AUTH_EVENTS ) {\n    this.$rootScope = $rootScope;\n    this.$state = $state;\n    this.$mdDialog = $mdDialog;\n\n    this.showModal = function () {\n      this.$mdDialog\n        .show({\n        controller: LoginModalCtrl,\n        controllerAs: 'loginModalCtrl',\n        templateUrl: 'common/directives/loginModal/loginModal.tpl.html',\n        locals : {\n          self: this // need to pass context to modal controller (out of `this` rootScope)\n        },\n        clickOutsideToClose: false\n      });\n    };\n\n    this.hideModal = function () {\n      $state.go($state.current, {}, {reload: true});\n      this.$mdDialog.hide();\n    };\n\n    // show the modal when we hear a `sessionTimeout` event\n    this.$rootScope.$on(AUTH_EVENTS.sessionTimeout, function (event) {\n      // only show the login modal if not on the login page\n      if ( $state.$current.name !== 'login' ) {\n        event.currentScope.loginModalLaunchCtrl.showModal();\n      }\n    });\n\n    // hide the modal when we hear a `loginSuccess` event\n    this.$rootScope.$on(AUTH_EVENTS.loginSuccess, function (event) {\n      event.currentScope.loginModalLaunchCtrl.hideModal();\n    });\n  }\n}\n\nloginModalDirectiveModule.directive('loginModal', function () {\n    return {\n      restrict: 'E',\n      controller: LoginModalLaunchCtrl,\n      controllerAs: 'loginModalLaunchCtrl'\n    };\n  });\n\nexport default loginModalDirectiveModule;\n"]}