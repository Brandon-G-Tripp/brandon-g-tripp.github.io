{"version":3,"sources":["common/directives/loginModal/loginModal.js"],"names":[],"mappings":"AAAA,OAAO,SAAS,CAAC,oBAAoB,qBAAqB,qBAAqB,UAAU,SAAS;EAChG,IAAI,cAAc,iBAOd,2BAIA,gBAcA;;EAvBJ,OAAO;IACL,SAAS,CAAC,UAAU,kBAAkB,IAAI,UAAU,kBAAkB,IAAI,UAAU,gBAAgB;IACpG,SAAS,YAAY;;;MAHzB;;MAQM,eAAe,CAAC,YAAY,EAAE,SAAS,iBAAiB,QAAQ,OAAO,EAAE,KAAK,IAAI,OAAO,OAAO,EAAE,IAAI,OAAO,MAAM,MAAM,KAAK,eAAe,MAAM,IAAI,KAAK,OAAO,KAAK,WAAW,QAAQ,OAAO,iBAAiB,QAAQ,UAAU,OAAO,UAAU,aAAa,YAAY,aAAa,EAAE,IAAI,YAAY,iBAAiB,YAAY,WAAW,aAAa,IAAI,aAAa,iBAAiB,aAAa,cAAc,OAAO;;MAEva,kBAAkB,UAAU,UAAU,aAAa,EAAE,IAAI,EAAE,oBAAoB,cAAc,EAAE,MAAM,IAAI,UAAU;;MAJnH,4BAA4B,QAAQ,OAAO,iBAAiB,CAChE;;MAGI,iBAAc,CAAA,YAAA;QACN,SADR,eACS,QAAQ,WAAW;UAKxB,gBAAgB,MANpB;;UAEF,KAAK,OAAO;UACZ,KAAK,SAAU;UACf,KAAK,YAAa;;;QASd,aAbF,gBAAc;UAMlB,MAAI;YASM,OATL,SAAA,OAAG;cACN,KAAK,UAAU;;;UAEjB,QAAM;YAWI,OAXH,SAAA,SAAG;cACR,KAAK,UAAU;;;;;QAgBX,OA1BF;;;MAcA,uBACQ,SADR,qBACU,YAAY,QAAQ,WAAW,aAAc;QAerD,gBAAgB,MAhBlB;;QAEF,KAAK,aAAa;QAClB,KAAK,SAAS;QACd,KAAK,YAAY;;QAEjB,KAAK,YAAY,YAAY;UAC3B,KAAK,UACF,KAAK;YACN,YAAY;YACZ,cAAc;YACd,aAAa;YACb,QAAS;cACP,MAAM;;YAER,qBAAqB;;;;QAIzB,KAAK,YAAY,YAAY;UAC3B,OAAO,GAAG,OAAO,SAAS,IAAI,EAAC,QAAQ;UACvC,KAAK,UAAU;;;;QAIjB,KAAK,WAAW,IAAI,YAAY,gBAAgB,UAAU,OAAO;;UAE/D,IAAK,OAAO,SAAS,SAAS,SAAU;YACtC,MAAM,aAAa,qBAAqB;;;;;QAK5C,KAAK,WAAW,IAAI,YAAY,cAAc,UAAU,OAAO;UAC7D,MAAM,aAAa,qBAAqB;;;;MAK9C,0BAA0B,UAAU,cAAc,YAAY;QAC1D,OAAO;UACL,UAAU;UACV,YAAY;UACZ,cAAc;;;;MAkBd,QAAQ,WAdC;;;GAiBZ","file":"loginModal.js","sourcesContent":["/* global self */\n\n'use strict';\n\nimport 'angular-material';\nimport 'angular-ui-router';\nimport './loginModal.tpl';\n\nconst loginModalDirectiveModule = angular.module('loginModal.js', [\n  'common/directives/loginModal/loginModal.tpl.html'\n]);\n\nclass LoginModalCtrl {\n  constructor ($scope, $mdDialog) {\n    this.self = self;\n    this.$scope =  $scope;\n    this.$mdDialog =  $mdDialog;\n  }\n  hide () {\n    this.$mdDialog.hide();\n  }\n  cancel () {\n    this.$mdDialog.cancel();\n  }\n}\n\nclass LoginModalLaunchCtrl {\n  constructor ( $rootScope, $state, $mdDialog, AUTH_EVENTS ) {\n    this.$rootScope = $rootScope;\n    this.$state = $state;\n    this.$mdDialog = $mdDialog;\n\n    this.showModal = function () {\n      this.$mdDialog\n        .show({\n        controller: LoginModalCtrl,\n        controllerAs: 'loginModalCtrl',\n        templateUrl: 'common/directives/loginModal/loginModal.tpl.html',\n        locals : {\n          self: this // need to pass context to modal controller (out of `this` rootScope)\n        },\n        clickOutsideToClose: false\n      });\n    };\n\n    this.hideModal = function () {\n      $state.go($state.current, {}, {reload: true});\n      this.$mdDialog.hide();\n    };\n\n    // show the modal when we hear a `sessionTimeout` event\n    this.$rootScope.$on(AUTH_EVENTS.sessionTimeout, function (event) {\n      // only show the login modal if not on the login page\n      if ( $state.$current.name !== 'login' ) {\n        event.currentScope.loginModalLaunchCtrl.showModal();\n      }\n    });\n\n    // hide the modal when we hear a `loginSuccess` event\n    this.$rootScope.$on(AUTH_EVENTS.loginSuccess, function (event) {\n      event.currentScope.loginModalLaunchCtrl.hideModal();\n    });\n  }\n}\n\nloginModalDirectiveModule.directive('loginModal', function () {\n    return {\n      restrict: 'E',\n      controller: LoginModalLaunchCtrl,\n      controllerAs: 'loginModalLaunchCtrl'\n    };\n  });\n\nexport default loginModalDirectiveModule;\n"]}