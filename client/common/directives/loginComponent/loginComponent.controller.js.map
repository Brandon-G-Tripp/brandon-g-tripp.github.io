{"version":3,"sources":["common/directives/loginComponent/loginComponent.controller.js"],"names":[],"mappings":"AAAA,OAAO,SAAS,CAAC,WAAW,qBAAqB,oBAAoB,iCAAiC,UAAU,SAAS;EACvH,IACK,SAGA,aAAW,cAAA,iBAEZ,gCAMA;;EAVJ,OAAO;IACL,SAAS,CAAC,UAAU,UAAU;MAF3B,UAAO,SAAA;OAIP,UAAU,kBAAkB,IAAI,UAAU,kBAAkB,IAAI,UAAU,4BAA4B;MADtG,cAAW,2BAAA;;IAId,SAAS,YAAY;MATzB;;MAYM,eAAe,CAAC,YAAY,EAAE,SAAS,iBAAiB,QAAQ,OAAO,EAAE,KAAK,IAAI,OAAO,OAAO,EAAE,IAAI,OAAO,MAAM,MAAM,KAAK,eAAe,MAAM,IAAI,KAAK,OAAO,KAAK,WAAW,QAAQ,OAAO,iBAAiB,QAAQ,UAAU,OAAO,UAAU,aAAa,YAAY,aAAa,EAAE,IAAI,YAAY,iBAAiB,YAAY,WAAW,aAAa,IAAI,aAAa,iBAAiB,aAAa,cAAc,OAAO;;MAEva,kBAAkB,UAAU,UAAU,aAAa,EAAE,IAAI,EAAE,oBAAoB,cAAc,EAAE,MAAM,IAAI,UAAU;;MAPnH,iCAAiC,QAAQ,OAAO,gCAAgC,CACpF,YAAY,MACZ,aACA;;MAGI,qBAAkB,CAAA,YAAA;QACV,SADR,mBACS,QAAQ,UAAU,MAAM;UAM7B,gBAAgB,MAPpB;;UAEF,KAAK,SAAS;;UAEd,KAAK,OAAO;;UAEZ,KAAK,YAAY;UACjB,KAAK,OAAO;UACZ,KAAK,KAAK,QAAQ;UAClB,KAAK,KAAK,WAAW;UACrB,KAAK,SAAS;;;QAUV,aApBF,oBAAkB;UActB,OAAK;;;YAUK,OAVJ,SAAA,QAAG;cAWG,IAAI,QAAQ;;cAVtB,IAAG,KAAK,UAAU,UAAU,CAAC,KAAK,UAAU,YAAY;;gBAEtD,KAAK,UAAU,aAAa;;gBAE5B,KAAK,KAAK,MAAM;kBACd,UAAU,KAAK,KAAK;kBACpB,UAAU,KAAK,KAAK;mBAErB,KAAM,YAAM;;kBAEX,MAAK,OAAO,GAAG,WAAW,MAAM,EAAE,QAAQ;kBAC1C,IAAK,MAAK,WAAY;oBACpB,MAAK,UAAU,aAAa;;mBAE9B,SACM,UAAC,KAAQ;kBACf,IAAK,OAAO,IAAI,MAAO;oBACrB,MAAK,OAAO,IAAI,QAAQ;;kBAE1B,IAAK,MAAK,WAAY;oBACpB,MAAK,UAAU,aAAa;;;;;;;;QAkB9B,OArDF;;;MA0CN,+BAA+B,WAAW,sBAAsB,CAAC,UAAU,YAAY,QAAQ;;MAgBzF,QAAQ,WAdC;;;GAiBZ","file":"common/directives/loginComponent/loginComponent.controller.js","sourcesContent":["'use strict';\n\nimport angular from 'angular';\nimport 'angular-ui-router';\nimport 'angular-messages';\nimport authService from 'common/services/auth.service';\n\nconst loginComponentControllerModule = angular.module('loginComponent.controller.js', [\n  authService.name,\n  'ui.router',\n  'ngMessages'\n]);\n\nclass LoginComponentCtrl {\n  constructor ($state, $animate, Auth) {\n    this.$state = $state;\n\n    this.Auth = Auth;\n\n    this.loginForm = {};\n    this.user = {};\n    this.user.email = '';\n    this.user.password = '';\n    this.errors = {};\n  }\n  // public methods\n\n  login () {\n    if(this.loginForm.$valid && !this.loginForm.$submitted) {\n\n      this.loginForm.$submitted = true;\n\n      this.Auth.login({\n        username: this.user.email,\n        password: this.user.password\n      })\n      .then( () => {\n        // Logged in, redirect to home\n        this.$state.go('content', null, { reload: true });\n        if ( this.loginForm ) {\n          this.loginForm.$submitted = false;\n        }\n      })\n      .catch( (err) => {\n        if ( err && err.code ) {\n          this.errors[err.code] = err;\n        }\n        if ( this.loginForm ) {\n          this.loginForm.$submitted = false;\n        }\n      });\n    }\n  }\n}\n\nloginComponentControllerModule.controller('LoginComponentCtrl', ['$state', '$animate', 'Auth', LoginComponentCtrl ]);\n\nexport default loginComponentControllerModule;\n"],"sourceRoot":"/source/"}