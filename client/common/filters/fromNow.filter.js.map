{"version":3,"sources":["common/filters/fromNow.filter.js"],"names":[],"mappings":"AAAA,OAAO,SAAS,CAAC,WAAW,WAAW,UAAU,SAAS;EACxD,IAWK,SACA,QAQD;;EANN,SAAS,SAAS;IAChB,OAAO,UAAC,cAAY,IAAoB,QAAW;MAX/C,IAWkB,WAAQ,UAAA,OAAA,YAAG,QAAK,UAAA;;MACpC,OAAQ,SAAU,OAAO,cAAc,OAAO,UAAU,OAAO,cAAc,QAAQ;;;;EANvF,OAAO;IACL,SAAS,CAAC,UAAU,UAAU;MAA3B,UAAO,SAAA;OAEP,UAAU,SAAS;MADnB,SAAM,QAAA;;IAIT,SAAS,YAAY;;;;;;;;;;;;;MAanB;;MATA,gBAAgB,QAAQ,OAAO,qBAAqB,IACvD,OAAO,WAAW;;MAYf,QAAQ,WAVC;;;GAaZ","file":"common/filters/fromNow.filter.js","sourcesContent":["/*\n * Simple wrapper for moment.js's fromNow() function, basically. Put in\n * milliseconds from epoch, get a readable string like \"3 hours ago\".\n *\n * Just as with moment.js's fromNow(), you may pass a Boolean 'noSuffix'\n * which if true will return a string without the suffix.\n *\n * {{ 12345 | fromNow }}      => \"4 years ago\"\n * {{ 12345 | fromNow:true }} => \"4 years\"\n *\n * See http://momentjs.com/docs/#/displaying/fromnow/\n */\nimport angular from 'angular';\nimport moment from 'moment';\n\nfunction filter() {\n  return (milliseconds, noSuffix = false, format) => {\n    return (format) ? moment(milliseconds).format(format) : moment(milliseconds).fromNow(noSuffix);\n  };\n}\n\nconst fromNowModule = angular.module('fromNow.filter.js', [])\n  .filter('fromNow', filter);\n\nexport default fromNowModule;\n"],"sourceRoot":"/source/"}