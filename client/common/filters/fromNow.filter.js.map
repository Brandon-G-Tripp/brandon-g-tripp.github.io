{"version":3,"sources":["common/filters/fromNow.filter.js"],"names":["filter","milliseconds","noSuffix","format","moment","fromNow","angular","fromNowModule","module"],"mappings":"AAAA;;AAEA,OAAO,SAAS,CAAC,WAAW,WAAW,UAAU,SAAS,UAAU;EAClE;;EAEA,IAAI,SAAS,QAAQ;;;;;;;;;;;;;;EAUvB,SAASA,SAAS;IAChB,OAAO,UAACC,cAAcC,UAAUC,QAAW;MACzCD,WAAYA,WAAYA,WAAW;MACnC,OAAQC,SAAUC,OAAOH,cAAcE,OAAOA,UAAUC,OAAOH,cAAcI,QAAQH;;;;EAQvF,OAAO;IACL,SAAS,CAAC,UAAU,UAAU;MAf3BI,UAgBS,SAAS;OAClB,UAAU,SAAS;MAhBnBF,SAiBQ,QAAQ;;IAEnB,SAAS,YAAY;MAVnBG,gBAAgBD,QAAQE,OAAO,qBAAqB,IACvDR,OAAO,WAAWA;;MAYf,QAAQ,WAVCO;;;GAaZ","file":"fromNow.filter.js","sourcesContent":["/*\n * Simple wrapper for moment.js's fromNow() function, basically. Put in\n * milliseconds from epoch, get a readable string like \"3 hours ago\".\n *\n * Just as with moment.js's fromNow(), you may pass a Boolean 'noSuffix'\n * which if true will return a string without the suffix.\n *\n * {{ 12345 | fromNow }}      => \"4 years ago\"\n * {{ 12345 | fromNow:true }} => \"4 years\"\n *\n * See http://momentjs.com/docs/#/displaying/fromnow/\n */\nimport angular from 'angular';\nimport moment from 'moment';\n\nfunction filter() {\n  return (milliseconds, noSuffix, format) => {\n    noSuffix = (noSuffix) ? noSuffix : false;\n    return (format) ? moment(milliseconds).format(format) : moment(milliseconds).fromNow(noSuffix);\n  };\n}\n\nconst fromNowModule = angular.module('fromNow.filter.js', [])\n  .filter('fromNow', filter);\n\nexport default fromNowModule;\n"]}