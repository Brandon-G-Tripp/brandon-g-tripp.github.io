{"version":3,"sources":["common/filters/fromNow.filter.js"],"names":[],"mappings":"AAAA,OAAO,SAAS,CAAC,WAAW,WAAW,UAAU,SAAS;EACxD,IAWK,SACA,QASD;;EAPN,SAAS,SAAS;IAChB,OAAO,UAAC,cAAc,UAAU,QAAW;MACzC,WAAW,WAAa,WAAW;MACnC,OAAQ,SAAU,OAAO,cAAc,OAAO,UAAU,OAAO,cAAc,QAAQ;;;;EARvF,OAAO;IACL,SAAS,CAAC,UAAU,UAAU;MAC3B,UAAO,SAAA;OACP,UAAU,SAAS;MAAnB,SAAM,QAAA;;IAGT,SAAS,YAAY;;;;;;;;;;;;;MAanB;;MAPA,gBAAgB,QAAQ,OAAO,qBAAqB,IACvD,OAAO,WAAW;;MAUf,QAAQ,WARC;;;GAWZ","file":"fromNow.filter.js","sourcesContent":["/*\n * Simple wrapper for moment.js's fromNow() function, basically. Put in\n * milliseconds from epoch, get a readable string like \"3 hours ago\".\n *\n * Just as with moment.js's fromNow(), you may pass a Boolean 'noSuffix'\n * which if true will return a string without the suffix.\n *\n * {{ 12345 | fromNow }}      => \"4 years ago\"\n * {{ 12345 | fromNow:true }} => \"4 years\"\n *\n * See http://momentjs.com/docs/#/displaying/fromnow/\n */\nimport angular from 'angular';\nimport moment from 'moment';\n\nfunction filter() {\n  return (milliseconds, noSuffix, format) => {\n    noSuffix = (noSuffix) ? noSuffix : false;\n    return (format) ? moment(milliseconds).format(format) : moment(milliseconds).fromNow(noSuffix);\n  };\n}\n\nconst fromNowModule = angular.module('fromNow.filter.js', [])\n  .filter('fromNow', filter);\n\nexport default fromNowModule;\n"]}