"use strict";System.register(["angular","config/config"],function(_export,_context){function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Constructor}var angular,configService,linkServiceModule,Link;return{setters:[function(_angular){angular=_angular["default"]},function(_configConfig){configService=_configConfig["default"]}],execute:function(){linkServiceModule=angular.module("link.service.js",[configService]),Link=function(){function Link(Config,$mdDialog,$log){_classCallCheck(this,Link),this.Config=Config,this.$mdDialog=$mdDialog,this.$log=$log}return _createClass(Link,[{key:"nameToUrlPath",value:function(name){return name.split("(")[0].trim().split(" ").join("_").toLowerCase()}},{key:"copyLinkToClip",value:function(items,path){var _this=this,urlString="";if(items.forEach(function(item,i){i>0&&(urlString+=","),urlString+="".concat(_this.Config.urlBase).concat(path,"/").concat(_this.nameToUrlPath(item.name))}),document.queryCommandSupported("copy")){var copyTextToClipboard=function(text){var textArea=document.createElement("textarea");textArea.style.position="fixed",textArea.style.top=0,textArea.style.left=0,textArea.style.width="2em",textArea.style.height="2em",textArea.style.padding=0,textArea.style.border="none",textArea.style.outline="none",textArea.style.boxShadow="none",textArea.style.background="transparent",textArea.value=text,document.body.appendChild(textArea),textArea.select();try{var successful=document.execCommand("copy"),msg=successful?"successful":"unsuccessful";this.$log.info("Copying text command was "+msg)}catch(err){this.$log.info("Unable to copy")}document.body.removeChild(textArea)};copyTextToClipboard.bind(this)(urlString)}else this.$mdDialog.show(this.$mdDialog.alert().clickOutsideToClose(!0).title("Cannot Copy to Clipboard").textContent("Your browser doesn't support copying links to your system clipboard.").ariaLabel("Cannot Copy to Clipboard").ok("Got it!")),this.$log.info(urlString)}}]),Link}(),linkServiceModule.service("Link",Link),_export("default",linkServiceModule)}}});