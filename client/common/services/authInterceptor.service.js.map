{"version":3,"sources":["common/services/authInterceptor.service.js"],"names":["angular","authInterceptorModule","module","factory","$rootScope","$q","$cookieStore","request","config","headers","get","Authorization","responseError","response","status","remove","reject","$httpProvider","interceptors","push"],"mappings":"AAAA;;AAEA,OAAO,SAAS,CAAC,YAAY,UAAU,SAAS,UAAU;EACxD;;EAEA,IAAI,SAAS;EACb,OAAO;IACL,SAAS,CAAC,UAAU,UAAU;MAP3BA,UAQS,SAAS;;IAErB,SAAS,YAAY;MARnBC,wBAAwBD,QAAQE,OAAO,8BAA8B;MAE3ED,sBAAsBE,QAAQ,wDAAmB,UAAUC,YAAYC,IAAIC,cAAc;QACvF,OAAO;;UAELC,SAFK,SAAA,QAEGC,QAAQ;YACdA,OAAOC,UAAUD,OAAOC,WAAW;;YACnC,IAAIH,aAAaI,IAAI,UAAU;cAC7BF,OAAOC,QAAQE,gBAAgB,YAAYL,aAAaI,IAAI;;;YAE9D,OAAOF;;;UAITI,eAXK,SAAA,cAWUC,UAAU;YACvB,IAAGA,SAASC,WAAW,KAAK;;cAE1BR,aAAaS,OAAO;cACpB,OAAOV,GAAGW,OAAOH;mBAEd;cACH,OAAOR,GAAGW,OAAOH;;;;;MAMzBZ,sBAAsBO,yBAAO,UAACS,eAAkB;QAC9CA,cAAcC,aAAaC,KAAK;;;MAU5B,QAAQ,WAPClB;;;GAUZ","file":"authInterceptor.service.js","sourcesContent":["import angular from 'angular';\n\nconst authInterceptorModule = angular.module('authInterceptor.service.js', []);\n\nauthInterceptorModule.factory('authInterceptor', function ($rootScope, $q, $cookieStore) {\n  return {\n    // Add authorization token to headers\n    request(config) {\n      config.headers = config.headers || {};\n      if ($cookieStore.get('token')) {\n        config.headers.Authorization = 'Bearer ' + $cookieStore.get('token');\n      }\n      return config;\n    },\n\n    // Intercept 401s and redirect you to login\n    responseError (response) {\n      if(response.status === 401) {\n        // remove any stale tokens\n        $cookieStore.remove('token');\n        return $q.reject(response);\n      }\n      else {\n        return $q.reject(response);\n      }\n    }\n  };\n});\n\nauthInterceptorModule.config(($httpProvider) => {\n  $httpProvider.interceptors.push('authInterceptor');\n});\n\nexport default authInterceptorModule;\n"]}