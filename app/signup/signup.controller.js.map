{"version":3,"sources":["app/signup/signup.controller.js"],"names":["angular","authService","customEmailValidation","customPasswordValidation","signupCtrlModule","module","name","SignupCtrl","$state","$animate","Auth","signupForm","user","email","password","errors","$valid","$submitted","createUser","firstName","firstname","lastName","lastname","then","go","reload","catch","err","data","code","controller"],"mappings":"AAAA;;AAEA,OAAO,SAAS,CAAC,WAAW,qBAAqB,oBAAoB,gCAAgC,iEAAiE,wEAAwE,UAAU,SAAS,UAAU;EACzQ;;EAEA,IAAI,SAAS,aAAa,uBAAuB,0BAA0B,kBAAkB;;EAE7F,SAAS,gBAAgB,UAAU,aAAa,EAAE,IAAI,EAAE,oBAAoB,cAAc,EAAE,MAAM,IAAI,UAAU;;EAEhH,SAAS,kBAAkB,QAAQ,OAAO,EAAE,KAAK,IAAI,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,EAAE,IAAI,aAAa,MAAM,IAAI,WAAW,aAAa,WAAW,cAAc,OAAO,WAAW,eAAe,MAAM,IAAI,WAAW,YAAY,WAAW,WAAW,MAAM,OAAO,eAAe,QAAQ,WAAW,KAAK;;EAE7S,SAAS,aAAa,aAAa,YAAY,aAAa,EAAE,IAAI,YAAY,kBAAkB,YAAY,WAAW,aAAa,IAAI,aAAa,kBAAkB,aAAa,cAAc,OAAO;;EAEzM,OAAO;IACL,SAAS,CAAC,UAAU,UAAU;MAZ3BA,UAaS,SAAS;OAClB,UAAU,kBAAkB,IAAI,UAAU,kBAAkB,IAAI,UAAU,4BAA4B;MAXtGC,cAYa,2BAA2B;OACxC,UAAU,6DAA6D;MAZvEC,wBAauB,4DAA4D;OACnF,UAAU,mEAAmE;MAb7EC,2BAc0B,kEAAkE;;IAE/F,SAAS,YAAY;MAdnBC,mBAAmBJ,QAAQK,OAAO,wBAAwB,CAC9D,aACA,cACAJ,YAAYK,MACZJ,sBAAsBI,MACtBH,yBAAyBG;;MAGrBC;;MAWA,YAAY;QAVhB,SAAA,WAAaC,QAAQC,UAAUC,MAAM;UAAA,gBAAA,MAAA;;UACnC,KAAKF,SAASA;UAEd,KAAKE,OAAOA;UAEZ,KAAKC,aAAa;UAClB,KAAKC,OAAO;UACZ,KAAKA,KAAKC,QAAQ;UAClB,KAAKD,KAAKE,WAAW;UACrB,KAAKC,SAAS;;;;QAeV,aAAa,YAAY,CAAC;UACxB,KAAK;UACL,OAAO,SAAS,SAbd;YAAA,IAAA,QAAA;;YACR,IAAG,KAAKJ,WAAWK,UAAU,CAAC,KAAKL,WAAWM,YAAY;cAExD,KAAKN,WAAWM,aAAa;cAE7B,KAAKP,KAAKQ,WAAW;gBACnBC,WAAW,KAAKP,KAAKQ;gBACrBC,UAAU,KAAKT,KAAKU;gBACpBT,OAAO,KAAKD,KAAKC;gBACjBC,UAAU,KAAKF,KAAKE;iBAErBS,KAAM,YAAM;;gBAEX,MAAKf,OAAOgB,GAAG,WAAW,MAAM;kBAAEC,QAAQ;;;gBAC1C,MAAKd,WAAWM,aAAa;iBAE9BS,MAAO,UAACC,KAAQ;gBACf,MAAKZ,OAAOY,IAAIC,KAAKC,QAAQF,IAAIC;gBACjC,MAAKjB,WAAWM,aAAa;;;;;;QAoB7B,OAAO;;;MAdfb,iBAAiB0B,WAAW,cAAc,CAAC,UAAU,YAAY,QAAQvB;;MAmBnE,QAAQ,WAjBCH;;;GAoBZ","file":"signup.controller.js","sourcesContent":["'use strict';\n\nimport angular from 'angular';\nimport 'angular-ui-router';\nimport 'angular-messages';\nimport authService from 'common/services/auth.service';\nimport customEmailValidation from 'common/directives/customEmailValidation/customEmailValidation';\nimport customPasswordValidation from 'common/directives/customPasswordValidation/customPasswordValidation';\n\nconst signupCtrlModule = angular.module('signup.controller.js', [\n  'ui.router',\n  'ngMessages',\n  authService.name,\n  customEmailValidation.name,\n  customPasswordValidation.name\n]);\n\nclass SignupCtrl {\n  constructor ($state, $animate, Auth) {\n    this.$state = $state;\n\n    this.Auth = Auth;\n\n    this.signupForm = {};\n    this.user = {};\n    this.user.email = '';\n    this.user.password = '';\n    this.errors = {};\n  }\n  // public methods\n\n  signup () {\n    if(this.signupForm.$valid && !this.signupForm.$submitted) {\n\n      this.signupForm.$submitted = true;\n\n      this.Auth.createUser({\n        firstName: this.user.firstname,\n        lastName: this.user.lastname,\n        email: this.user.email,\n        password: this.user.password,\n      })\n      .then( () => {\n        // Logged in, redirect to home\n        this.$state.go('content', null, { reload: true });\n        this.signupForm.$submitted = false;\n      })\n      .catch( (err) => {\n        this.errors[err.data.code] = err.data;\n        this.signupForm.$submitted = false;\n      });\n    }\n  }\n}\n\nsignupCtrlModule.controller('SignupCtrl', ['$state', '$animate', 'Auth', SignupCtrl ]);\n\nexport default signupCtrlModule;\n"]}