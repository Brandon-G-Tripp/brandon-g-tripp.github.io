{"version":3,"sources":["app/app.js"],"names":["angular","routing","authBroadcastService","authInterceptorService","authService","configService","loginModal","loginComponent","homeModule","app","module","name","config","$urlRouterProvider","$locationProvider","$stateProvider","$httpProvider","$mdThemingProvider","$mdIconProvider","html5Mode","enabled","requireBase","useApplyAsync","otherwise","theme","primaryPalette","accentPalette","dark","defaultIconSet","state","url","controller","$scope","$state","Auth","logout","$evalAsync","go","reload","authenticate","run","$rootScope","$timeout","$on","event","next","abstract","setNextRoute","isLoggedInAsync","loggedIn","preventDefault","getNextRoute","element","document","ready","bootstrap","body"],"mappings":"AAAA;;AAEA,OAAO,SAAS,CAAC,UAAU,WAAW,mBAAmB,oBAAoB,8CAA8C,qBAAqB,mBAAmB,cAAc,wBAAwB,yCAAyC,2CAA2C,gCAAgC,iBAAiB,2CAA2C,mDAAmD,oBAAoB,kBAAkB,UAAU,SAAS,UAAU;EAC7e;;EAEA,IAAI,SAAS,SAAS,sBAAsB,wBAAwB,aAAa,eAAe,YAAY,gBAAgB,YAAY;EACxI,OAAO;IACL,SAAS,CAAC,UAAU,SAAS,IAAI,UAAU,UAAU;MAJlDA,UAKS,SAAS;OAClB,UAAU,iBAAiB,IAAI,UAAU,kBAAkB,IAAI,UAAU,uCAAuC,IAAI,UAAU,kBAAkB,IAAI,UAAU,iBAAiB,IAAI,UAAU,aAAa,IAAI,UAAU,qBAAqB;MAC5OC,UAAQ,oBAARA;OACD,UAAU,qCAAqC;MAA/CC,uBACsB,oCAAoC;OAC1D,UAAU,uCAAuC;MADjDC,yBAEwB,sCAAsC;OAC9D,UAAU,4BAA4B;MAFtCC,cAGa,2BAA2B;OACxC,UAAU,eAAe;MAHzBC,gBAIe,cAAc;OAC7B,UAAU,uCAAuC;MAJjDC,aAKY,sCAAsC;OAClD,UAAU,+CAA+C;MALzDC,iBAMgB,8CAA8C;OAC9D,UAAU,gBAAgB,IAAI,UAAU,cAAc;MAJtDC,aAKY,aAAa;;IAE5B,SAAS,YAAY;MALnBC,MAAMT,QAAQU,OAAO,SAAS,CAClC,aACA,eACA,cACA,aACA,aACAR,qBAAqBS,MACrBR,uBAAuBQ,MACvBP,YAAYO,MACZN,cAAcM,MACdL,WAAWK,MACXJ,eAAeI,MACfH,WAAWG;MAGbF,IAAIG,OAAOX,QAAQQ;MAEnBA,IAAIG,+HAAO,UAAUC,oBAAoBC,mBAAmBC,gBAAgBC,eAAeC,oBAAoBC,iBAAiB;QAC9HJ,kBAAkBK,UAAU;UAC1BC,SAAS;UACTC,aAAa;;QAEfL,cAAcM,cAAc;QAE5BT,mBAAmBU,UAAU;QAE7BN,mBAAmBO,MAAM,WACpBC,eAAe,eAAe;UAC7B,WAAW;UACX,SAAS;UACT,SAAS;UACT,SAAS;WAEVC,cAAc;QAEnBT,mBAAmBO,MAAM,QACpBC,eAAe,eAAe;UAC7B,WAAW;UACX,SAAS;UACT,SAAS;UACT,SAAS;WAEVE;QAELT,gBACMU,eAAe;;;;QAIrBb,eAAec,MAAM,UAAU;UAC7BC,KAAK;UACLC,yCAAY,SAAA,WAASC,QAAQC,QAAQC,MAAM;YACzCA,KAAKC;YACLH,OAAOI,WAAY,YAAY;cAC7BH,OAAOI,GAAG,SAAS,IAAI;gBAAEC,QAAQ;;;;UAGrCC,cAAc;;;;;MAMlB9B,IAAI+B,iDAAI,UAAUC,YAAYR,QAAQS,UAAUR,MAAM;;QAEpDO,WAAWE,IAAI,qBAAqB,UAAUC,OAAOC,MAAM;UACzD,IAAKA,KAAKlC,SAAS,WAAWkC,KAAKlC,SAAS,YAAY,CAACkC,KAAKC,UAAW;YACvEZ,KAAKa,aAAcF;;;UAErB,IAAKA,KAAKN,cAAe;YACvBL,KAAKc,gBAAiB,UAACC,UAAa;;;cAGlC,IAAIJ,KAAKN,gBAAgB,CAACU,UAAU;gBAClCL,MAAMM;gBACNjB,OAAOI,GAAG,SAAS,IAAI;kBAAEC,QAAQ;;qBAC5B,IAAKO,KAAKN,gBAAgBU,YAAYJ,KAAKlC,SAASuB,KAAKiB,eAAexC,MAAQ;gBACrFsB,OAAOI,GAAIQ,KAAKlC,MAAM,IAAI;kBAAE2B,QAAQ;;;;;;;;MAQ9CtC,QAAQoD,QAAQC,UAAUC,MAAM,YAAW;QACzCtD,QAAQuD,UAAUF,SAASG,MAAM,CAAE/C,IAAIE,OAAQ;;;;MAT3C,QAAQ,WAcCF;;;GAXZ","file":"app.js","sourcesContent":["'use strict';\n\nimport 'lodash';\nimport angular from 'angular';\nimport 'angular-animate';\nimport 'angular-material';\nimport 'angular-material/angular-material.min.css!';\nimport 'angular-ui-router';\nimport 'angular-cookies';\nimport 'oclazyload';\nimport {routing} from 'common/utils/routing';\nimport authBroadcastService from 'common/services/authBroadcast.service';\nimport authInterceptorService from 'common/services/authInterceptor.service';\nimport authService from 'common/services/auth.service';\nimport configService from 'config/config';\nimport loginModal from 'common/directives/loginModal/loginModal';\nimport loginComponent from 'common/directives/loginComponent/loginComponent';\nimport 'common/core.css!';\n\nimport homeModule from 'app/home/home';\n\nconst app = angular.module('olrpg', [\n  'ui.router',\n  'oc.lazyLoad',\n  'ngMaterial',\n  'ngCookies',\n  'ngAnimate',\n  authBroadcastService.name,\n  authInterceptorService.name,\n  authService.name,\n  configService.name,\n  loginModal.name,\n  loginComponent.name,\n  homeModule.name\n]);\n\napp.config(routing(app));\n\napp.config(function ($urlRouterProvider, $locationProvider, $stateProvider, $httpProvider, $mdThemingProvider, $mdIconProvider) {\n  $locationProvider.html5Mode({\n    enabled: true,\n    requireBase: false\n  });\n  $httpProvider.useApplyAsync(true);\n\n  $urlRouterProvider.otherwise('/');\n\n  $mdThemingProvider.theme('default')\n      .primaryPalette('deep-purple', {\n        'default': '700',\n        'hue-1': '300',\n        'hue-2': '500',\n        'hue-3': '50'\n      })\n      .accentPalette('light-green');\n\n  $mdThemingProvider.theme('dark')\n      .primaryPalette('deep-purple', {\n        'default': '700',\n        'hue-1': '300',\n        'hue-2': '500',\n        'hue-3': '50'\n      })\n      .dark();\n\n  $mdIconProvider\n       .defaultIconSet('assets/svg/sprite.stack.svg');       // Register a default set of SVG icons\n\n  // the abstract state for login simply calls\n  // Auth.logout() and redirects to the /login route\n  $stateProvider.state('logout', {\n    url: '/logout',\n    controller: function($scope, $state, Auth) {\n      Auth.logout();\n      $scope.$evalAsync( function () {\n        $state.go('login', {}, { reload: true });\n      });\n    },\n    authenticate: false\n  });\n});\n\n// enforce login / logout / and separate\n// \"guest\" vs. authenticated-only routes\napp.run(function ($rootScope, $state, $timeout, Auth) {\n  // Redirect to login if route requires auth and you're not logged in\n  $rootScope.$on('$stateChangeStart', function (event, next) {\n    if ( next.name !== 'login' && next.name !== 'logout' && !next.abstract ) {\n      Auth.setNextRoute( next );\n    }\n    if ( next.authenticate ) {\n      Auth.isLoggedInAsync( (loggedIn) => {\n        // prevent routing if the next route requires authentication\n        // & we have no user\n        if (next.authenticate && !loggedIn) {\n          event.preventDefault();\n          $state.go('login', {}, { reload: true });\n        } else if ( next.authenticate && loggedIn && next.name !== Auth.getNextRoute().name )  {\n          $state.go( next.name, {}, { reload: false });\n        }\n      });\n    }\n  });\n});\n\n// bootstrap our application\nangular.element(document).ready(function() {\n  angular.bootstrap(document.body, [ app.name ], {\n    // strictDi: true // turning off for now\n  });\n});\n\nexport default app;\n"]}